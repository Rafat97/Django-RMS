version: "3.3"

networks:
  RMS-docker-network:
volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  redis_insight:
    driver: local
  rabbitmq_data:
    driver: local
  pgadmin_data:
    driver: local
    
services:

  redis:
    image: docker.io/bitnami/redis:6.2
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    restart: always
    volumes:
      - 'redis_data:/bitnami/redis/data'
    networks:
      - RMS-docker-network 


  redisinsight:
    image: redislabs/redisinsight:latest
    restart: always
    depends_on:
      - redis
    ports:
      - '8001:8001'
    volumes:
      - "redis_insight:/db" 
    networks:
      - RMS-docker-network   

  postgres:
    image: docker.io/bitnami/postgresql:11
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=admin123
      - POSTGRESQL_DATABASE=rms_db
    networks:
      - RMS-docker-network   

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
        - postgres
    ports:
        - 5059:80
    networks: 
        - RMS-docker-network 
    volumes:
      - 'pgadmin_data:/var/lib/pgadmin' 
    environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: admin

  # rabbitmq:
  #   image: docker.io/bitnami/rabbitmq:3.9
  #   ports:
  #     - '4369:4369'
  #     - '5551:5551'
  #     - '5552:5552'
  #     - '5672:5672'
  #     - '25672:25672'
  #     - '15672:15672'
  #   environment:
  #     - RABBITMQ_SECURE_PASSWORD=yes
  #   restart: always
  #   volumes:
  #     - 'rabbitmq_data:/bitnami/rabbitmq/mnesia'
  #   networks:
  #     - RMS-docker-network 


  web-api-dev:
    container_name: RMS-API
    build: 
        context: .
        dockerfile: ./Dockerfile.DEV
    restart: always
    depends_on:
      - redis
      # - rabbitmq
      - postgres
    volumes:
      - .:/code
    ports:
      - "9080:80"

    command: bash -c "  
        python manage.py migrate &&
        python manage.py makesuper &&
        python manage.py creategroup &&
        python manage.py runserver 0.0.0.0:80
        "

    networks:
      - RMS-docker-network
